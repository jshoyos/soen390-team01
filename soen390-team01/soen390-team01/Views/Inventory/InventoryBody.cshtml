@model soen390_team01.Models.InventoryModel

<div id="Bike-filter" class="filer-data" style="display:@(Model.SelectedTab == "Bike" ? "block": "none")">
    @{await Html.RenderPartialAsync("Filter", Model.BikeFilters);}
    <input class="filter-data" type="submit" value="Clear Filter" onclick="refreshFilter('Bike'),showFilter('Bike')">
</div>
<div id="Part-filter" class="filer-data" style="display:@(Model.SelectedTab == "Part" ? "block": "none")">
    @{await Html.RenderPartialAsync("Filter", Model.PartFilters);}
    <input class="filter-data" type="submit" value="Clear Filter" onclick="refreshFilter('Part'),showFilter('Part')">
</div>
<div id="Material-filter" class="filer-data" style="display:@(Model.SelectedTab == "Material" ? "block": "none")">
    @{await Html.RenderPartialAsync("Filter", Model.MaterialFilters);}
    <input class="filter-data" type="submit" value="Clear Filter" onclick="refreshFilter('Material'),showFilter('Material')">
</div>

<div class="bike-components">
    <div class="tab">
        <button class="tablinks @(Model.SelectedTab == "All" ? "active": "")" id="allButton" onclick="openTab(event, 'All'),hideFilter()">All</button>
    </div>
    <div class="tab">
        <button class="tablinks @(Model.SelectedTab == "Bike" ? "active": "")" id="bikeButton" onclick="openTab(event, 'Bike'),showFilter('Bike')">Bike</button>
        <button class="tablinks @(Model.SelectedTab == "Part" ? "active": "")" id="partButton" onclick="openTab(event, 'Part'),showFilter('Part')">Part</button>
        <button class="tablinks @(Model.SelectedTab == "Material" ? "active": "")" id="matButton" onclick="openTab(event, 'Material'),showFilter('Material')">Material</button>
    </div>
    <div id="All" class="tabcontent" style="display: @(Model.SelectedTab == "All" ? "block": "none")" onclick="hideFilter()">

        <h3>All</h3>

        @{await Html.RenderPartialAsync("InventoryTable", Model.AllList);}
    </div>
    <!-- Tab content -->
    <div id="Bike" class="tabcontent" style="display: @(Model.SelectedTab == "Bike" ? "block": "none")" onclick="showFilter('Bike')">

        <h3>Bikes</h3>
        <div class="Bike-table">
            @{await Html.RenderPartialAsync("BikeTable", Model.BikeList);}
        </div>

    </div>

    <div id="Part" class="tabcontent" style="display: @(Model.SelectedTab == "Part" ? "block": "none")" onclick="showFilter('Part')">
        <h3>Parts</h3>
        <div class="Part-table">
            @{await Html.RenderPartialAsync("PartTable", Model.PartList);}
        </div>

    </div>

    <div id="Material" class="tabcontent" style="display: @(Model.SelectedTab == "Material" ? "block": "none")" onclick="showFilter('Material')">
        <h3>Material</h3>
        <div class="Material-table">
            @{await Html.RenderPartialAsync("MaterialTable", Model.MaterialList);}
        </div>
    </div>
</div>