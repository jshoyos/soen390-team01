@model soen390_team01.Services.IInventoryService


<div class="container justify-content-center">
    <div class="row" id="mobileButtons">
        <button class="btn btn-outline-primary collapButton1" data-toggle="modal" data-target="#filterModal">Filter</button>
    </div>
</div>

<div class="container bike-components">
    <div class="row">
        <div class="col-8">
            <div class="tab">
                <button style="width:100%;" class="tablinks @(Model.SelectedTab == "inventory" ? "active": "")" id="allButton" onclick="openTab(event, 'inventory'),showFilter('inventory')">Inventory</button>
            </div>
            <div class="tab">
                <button style="width:33.33%;" class="tablinks @(Model.SelectedTab == "bike" ? "active": "")" id="bikeButton" onclick="openTab(event, 'bike'),showFilter('bike')">Bike</button>
                <button style="width:33.33%;" class="tablinks @(Model.SelectedTab == "part" ? "active": "")" id="partButton" onclick="openTab(event, 'part'),showFilter('part')">Part</button>
                <button style="width:33.33%;" class="tablinks @(Model.SelectedTab == "material" ? "active": "")" id="matButton" onclick="openTab(event, 'material'),showFilter('material')">Material</button>
            </div>
            <div id="inventory" class="tabcontent" style="display: @(Model.SelectedTab == "inventory" ? "block": "none")" onclick="showFilter('inventory')">

                <h4 class="tabTitle">Inventory</h4>

                @{await Html.RenderPartialAsync("InventoryTable", Model.AllList);}
            </div>
            <!-- Tab content -->
            <div id="bike" class="tabcontent" style="display: @(Model.SelectedTab == "bike" ? "block": "none")" onclick="showFilter('bike')">

                <h4 class="tabTitle">Bikes</h4>
                <div class="Bike-table">
                    @{await Html.RenderPartialAsync("BikeTable", Model.BikeList);}
                </div>

            </div>

            <div id="part" class="tabcontent" style="display: @(Model.SelectedTab == "part" ? "block": "none")" onclick="showFilter('part')">
                <h4 class="tabTitle">Parts</h4>
                <div class="Part-table">
                    @{await Html.RenderPartialAsync("PartTable", Model.PartList);}
                </div>

            </div>

            <div id="material" class="tabcontent" style="display: @(Model.SelectedTab == "material" ? "block": "none")" onclick="showFilter('material')">
                <h4 class="tabTitle">Material</h4>
                <div class="Material-table">
                    @{await Html.RenderPartialAsync("MaterialTable", Model.MaterialList);}
                </div>
            </div>
        </div>
        <div class="col-3" id="filter">
            <div id="inventory-filter" class="filter-data" style="display:@(Model.SelectedTab == "inventory" ? "block": "none")">
                @{await Html.RenderPartialAsync("Filter", Model.InventoryFilters);}
            </div>
            <div id="bike-filter" class="filter-data" style="display:@(Model.SelectedTab == "bike" ? "block": "none")">
                @{await Html.RenderPartialAsync("Filter", Model.BikeFilters);}
            </div>
            <div id="part-filter" class="filter-data" style="display:@(Model.SelectedTab == "part" ? "block": "none")">
                @{await Html.RenderPartialAsync("Filter", Model.PartFilters);}
            </div>
            <div id="material-filter" class="filter-data" style="display:@(Model.SelectedTab == "material" ? "block": "none")">
                @{await Html.RenderPartialAsync("Filter", Model.MaterialFilters);}
            </div>
        </div>
    </div>
    <!-- Modal for filter in mobile mode-->
    <div class="modal fade @(Model.ShowFilters  ? "show": "")" id="filterModal" role="dialog" aria-labelledby="filterModalTitle" aria-hidden="true" style="display:@(Model.ShowFilters  ? "block": "none")">
        @{ Model.ShowFilters = false;}
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="filterModal" aria-label="Close" onclick="hideFilterModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modal-filter">
                    <div id="inventory-mobile-filter" class="filter-data" style="display:@(Model.SelectedTab == "inventory" ? "block": "none")">
                        @{await Html.RenderPartialAsync("Filter", Model.InventoryFilters, new ViewDataDictionary(ViewData) { { "mobile", true } });}
                    </div>
                    <div id="bike-mobile-filter" class="filter-data" style="display:@(Model.SelectedTab == "receivable" ? "block": "none")">
                        @{await Html.RenderPartialAsync("Filter", Model.BikeFilters, new ViewDataDictionary(ViewData) { { "mobile", true } });}
                    </div>
                    <div id="part-mobile-filter" class="filter-data" style="display:@(Model.SelectedTab == "payable" ? "block": "none")">
                        @{await Html.RenderPartialAsync("Filter", Model.PartFilters, new ViewDataDictionary(ViewData) { { "mobile", true } });}
                    </div>
                    <div id="material-mobile-filter" class="filter-data" style="display:@(Model.SelectedTab == "payable" ? "block": "none")">
                        @{await Html.RenderPartialAsync("Filter", Model.MaterialFilters, new ViewDataDictionary(ViewData) { { "mobile", true } });}
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>