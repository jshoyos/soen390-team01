@using Newtonsoft.Json
@using soen390_team01.Data.Queries
@model Filters

<div id="@Model.Table-filter" class="filter-data">
    <h1 class="display-4">Filter</h1>
    @foreach (var filter in Model.List)
    {
        <p><strong>@filter.DisplayColumn</strong></p>
        if (filter.GetType() == typeof(SelectFilter))
        {
            <select onchange="passingFilters(@JsonConvert.SerializeObject(@Model), @JsonConvert.SerializeObject(filter.DisplayColumn), { SelectInput: { SelectValue: this.value, PossibleValues: @JsonConvert.SerializeObject(((SelectFilter)filter).SelectValues) } })">
                <option value="" selected></option>

                @foreach (var item in ((SelectFilter) filter).SelectValues)
                {
                    if (((SelectFilter)filter).Value == item)
                    {
                        <option value="@item" selected>@item</option>
                    }
                    else
                    {
                        <option value="@item">@item</option>
                    }
                }
            </select>
        } else if (filter.GetType() == typeof(StringFilter))
        {
            <input type="text" value="@filter.Input?.StringValue" onchange="passingFilters(@JsonConvert.SerializeObject(Model), @JsonConvert.SerializeObject(filter.DisplayColumn), { StringValue: this.value })" />
            <br/><br/>
        }
    }
    <br/><br/>
    <input class="filter-data" type="button" value="Clear" onclick="refreshFilter('Material'),showFilter('Material')">
</div>
